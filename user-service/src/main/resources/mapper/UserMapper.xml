<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.userservice.mapper.UserMapper">

    <!-- 用户实体映射 -->
    <resultMap id="UserResultMap" type="com.userservice.entity.User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="gmtCreate" column="gmt_create"/>
        <result property="gmtModified" column="gmt_modified"/>
    </resultMap>

    <!-- 插入用户 -->
    <insert id="insertUser" parameterType="com.userservice.entity.User">
        INSERT INTO users (user_id, username, password, email, phone, gmt_create, gmt_modified)
        VALUES (#{userId}, #{username}, #{password}, #{email}, #{phone}, NOW(), NOW())
    </insert>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" parameterType="string" resultMap="UserResultMap">
        SELECT * FROM users WHERE username = #{username}
    </select>

    <!-- 根据用户ID查询用户 -->
    <select id="selectByUserId" parameterType="long" resultMap="UserResultMap">
        SELECT * FROM users WHERE user_id = #{userId}
    </select>

    <!-- 分页查询用户 -->
    <select id="selectUsersWithPage" resultMap="UserResultMap">
        SELECT * FROM users ORDER BY gmt_create DESC LIMIT #{offset}, #{size}
    </select>

    <!-- 检查用户名是否存在 -->
    <select id="existsByUsername" parameterType="string" resultType="boolean">
        SELECT COUNT(1) > 0 FROM users WHERE username = #{username}
    </select>

    <!-- 检查邮箱是否存在 -->
    <select id="existsByEmail" parameterType="string" resultType="boolean">
        SELECT COUNT(1) > 0 FROM users WHERE email = #{email}
    </select>

    <!-- 检查手机号是否存在 -->
    <select id="existsByPhone" parameterType="string" resultType="boolean">
        SELECT COUNT(1) > 0 FROM users WHERE phone = #{phone}
    </select>

    <!-- 更新用户信息 -->
    <update id="updateUser" parameterType="com.userservice.entity.User">
        UPDATE users SET
                         email = #{email},
                         phone = #{phone},
                         gmt_modified = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE users SET
                         password = #{password},
                         gmt_modified = NOW()
        WHERE user_id = #{userId}
    </update>

</mapper>
